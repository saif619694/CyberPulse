version: '3.9'

services:
  cyberpulse-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cyberpulse-main
    ports:
      - "8000:8000"    # Flask API
      - "8501:8501"    # Streamlit frontend
    volumes:
      - ./logs:/app/logs
      - type: bind
        source: ./app
        target: /app/app
        read_only: false
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=8000
      - STREAMLIT_HOST=0.0.0.0
      - STREAMLIT_PORT=8501
      - API_BASE_URL=http://localhost:8000
      - DOCKER_ENV=true
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cyberpulse-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: cyberpulse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates in production
    depends_on:
      - cyberpulse-app
    restart: unless-stopped
    profiles:
      - production
    networks:
      - cyberpulse-network

  # Optional: Redis for caching
  redis:
    image: redis:alpine
    container_name: cyberpulse-redis
    restart: unless-stopped
    profiles:
      - production
    networks:
      - cyberpulse-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

networks:
  cyberpulse-network:
    driver: bridge
    name: cyberpulse